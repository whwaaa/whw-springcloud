server:
  port: ${port:9092}

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/springcloud
    username: root
    password: zUC8ytsEEh7gCj
  application:
    name: user-service  # Eureka服务在保存元素据时的第一层key值

mybatis:
  type-aliases-package: com.whw.user.pojo

eureka:
  client:
    service-url:
      # eureka 服务地址, 如果是集群的话, 需要指定其他集群eureka地址
      defaultZone: http://localhost:10086/eureka,http://localhost:10087/eureka
    register-with-eureka: true # 默认就是true, 服务提供者启动时, 该值位为true的话, 则会向EruekaServer发起一个Rest请求,
                               # 携带自己的元素据信息, Eureka会把这些信息保存到一个双层的Map中
                               # 第一层Map的key就是服务id, 一般是配置中的spring.application.name
                               # 第二层Map的key就是服务的实例id, 一般是host+serverId+port
                               # 也就是说配置了相同的serverId(服务id), 可以形成一个集群
  instance:
    # 更倾向于使用ip而不是主机名,默认是主机名
    prefer-ip-address: true
    # ip配置
    ip-address: 127.0.0.19
    # 服务失效时间，默认90秒
    lease-expiration-duration-in-seconds: 10
    # 服务续约间隔，默认30秒
    lease-renewal-interval-in-seconds: 10

